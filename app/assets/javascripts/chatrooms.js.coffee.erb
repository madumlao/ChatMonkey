# Place all the behaviors and hooks related to the matching controller here.
# All this logic will automatically be available in application.js.
# You can use CoffeeScript in this file: http://jashkenas.github.com/coffee-script/

# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this file,
# You can obtain one at http://mozilla.org/MPL/2.0/.
# (c) Rystraum Gamonez

last_request = ""

getDateString = (date) ->
  # 2011-11-07 09:38:39
  "#{date.getFullYear()}-#{add0(date.getMonth())}-#{add0(date.getDate())}"

getTimeString = (date) ->
  "#{add0(date.getHours())}:#{add0(date.getMinutes())}:#{add0(date.getSeconds())}"

add0 = (string) ->
  less = parseInt(string,10) < 10
  string = "0#{string}" if less
  string

getDateObjectString = (date) -> "#{getDateString(date)} #{getTimeString(date)}"

somethingNew = ->
  send = $("#toggle-notif").data('send-notif')
  $size = $(".latest").size()
  if $size > 0
    document.title = "Chat: #{$size} unread"
    $(".latest").each( (index) ->
      $(this).data('cssBG',$(this).css('background-color')) if !($(this).data('cssBG'))
      $(this).stop().animate({
          backgroundColor: "#80D080"
      })
      nmsg = $(".notify:parent",this).html()
      if nmsg? and send
        notify nmsg
        $(".notify",this).removeClass "notify"
    )
  else
    console.log "no new messages"


notNewAnymore = ->
  $(".latest").each( (index) ->
    bgc = $(this).data('cssBG')
    $(this).stop().animate({
        backgroundColor: bgc
    }).removeClass("latest")
  )
  document.title = "Chat"

updateChatroom = ->
  chatroom_id = $("#chatroom-id").html()
  msg_id      = $("#last-msg-id").html()
  user_email  = $("#current-user").html()
  url         = "/msgs/fetch.json?msg_id=#{msg_id}&chatroom_id=#{chatroom_id}"
  $.getJSON(url, (data) ->
    items = []
    last = msg_id
    $.each(data, (key, val) ->
      email = "<span class='who'>#{who(val)}:</span>"
      time  = "<dd class='when'><abbr class='timeago' title='#{val.created_at_in_iso}'>#{val.created_at_in_local}</abbr></dd>"
      m     = "<dl class='latest msg'><dt class='what'>#{email}<span class='notify'>#{val.message}</span></dt>#{time}</dl>"
      html  = "<div class=#{whose(user_email, val)}>#{m}</div>"
      items.push html
      last  = val.id if val.id > last
    )
    $("#messages-list").prepend items.join("")
    $("#last-msg-id").html last
    $("abbr.timeago",$(".latest")).timeago()
    somethingNew()
  )

whose = (email, val) -> if email == val.user.email then return 'mine' else return 'other'
who   = (val) ->
  console.log val
  if val.user.display_name? then return val.user.display_name else return val.user.email.split("@")[0]

sendMessage = ->
  chatroom_id = $("#chatroom-id").html()
  url         = "/chatrooms/#{chatroom_id}/msgs.js"
  params      = $("#new_msg").serialize()
  $.post(url,params, ->
    $("#msg_message").val("")
    updateChatroom()
  )

emptyFunction = -> return
requestPermission = (callback = emptyFunction) -> window.webkitNotifications.requestPermission callback
notify = (msg) ->
  if !window.webkitNotifications
    console.log 'Desktop notifications are only supported by Webkit at this time.'
    return

  if window.webkitNotifications.checkPermission() > 0
    requestPermission()

  icon  = "<%= image_path "yammi_banana.png" %>"
  title = "New Message"
  body  = msg
  popup = window.webkitNotifications.createNotification icon,title,body
  popup.show()
  setTimeout( ->
    popup.cancel()
  , 3000)
  return true

$(document).ready ->
  last_msg_id = $("#last-msg-id").html()
  message_list = $("#messages-list").html()
  notifications_allowed = window.webkitNotifications?

  if last_msg_id? and message_list?
    setInterval updateChatroom, 10000

  if notifications_allowed
    $("#notification").show()
  else
    console.log 'Desktop notifications are only supported by Webkit at this time.'

  if notifications_allowed and window.webkitNotifications.checkPermission() <= 0
    $("#notification").hide()
    $("#toggle-notif").show().data('send-notif',true)
  else
    $("#notification").click( (e) ->
      e.preventDefault()
      if notify("test notification")
        $("#notification").hide()
        $("#toggle-notif").show().data('send-notif',true)
      return false
    )

  $("#msg_message").autoResize()
  $("#msg_message").keypress (event) ->
    notNewAnymore()
    $("#send-message").click() if event.ctrlKey and (event.keyCode == 13 or event.keyCode == 10)

  $("#send-message").click( (event) ->
    event.preventDefault()
    sendMessage()
  )

  $("#toggle-notif").click( (event) ->
    event.preventDefault()
    val = $(this).data('send-notif')
    val = !val
    $(this).data('send-notif', val)
    x = if val then "disable" else "enable"
    y = if val then "alert" else "success"
    z = if val then "success" else "alert"
    $(this).html "Temporarily " + x + " notifications"
    $(this).removeClass(z).addClass(y)
  )

